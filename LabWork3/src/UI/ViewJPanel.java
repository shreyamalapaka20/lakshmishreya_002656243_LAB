/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Application;
import Model.Observation;
import Model.VitalSignHistory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shreyamalapaka
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    private Application application;
    DefaultTableModel viewTableModel;
    Observation selectedObs;
    
    
    public ViewJPanel() {
        initComponents();
    }

    ViewJPanel(Application application) {
        initComponents();
        
        this.application = application;
        this.viewTableModel = (DefaultTableModel)obsTable.getModel();
        
        displayObs();
        
    }
    
    public void displayObs(){
        VitalSignHistory history = this.application.getHistory();
        
        if(history.getVitalSignHHistory().size()>0){
            //display
            
            viewTableModel.setRowCount(0);
            for (Observation o:history.getVitalSignHHistory()){
                
                //framing a row
                Object row[] = new Object[3];
                row[0] = o;
                row[1] = o.getTemperature();
                row[2] = o.getBloodPressure();
                
                //add row to table
                viewTableModel.addRow(row);     
            }
            
        } else{
            System.out.println("Empty list!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fieldObsId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fieldTemp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fieldBloodPressure = new javax.swing.JTextField();
        updObsBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        obsTable = new javax.swing.JTable();
        viewObsBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("View and Update Vital Signs");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 20, -1, -1));

        jLabel2.setText("ID:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 79, -1, -1));

        fieldObsId.setEnabled(false);
        add(fieldObsId, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 74, 97, -1));

        jLabel3.setText("Temperature:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 123, -1, -1));
        add(fieldTemp, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 118, 97, -1));

        jLabel4.setText("Blood Pressure:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 167, -1, -1));
        add(fieldBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 162, 97, -1));

        updObsBtn.setText("Update Observation");
        updObsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updObsBtnActionPerformed(evt);
            }
        });
        add(updObsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, -1, -1));

        obsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Temperature", "Blood Pressure"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(obsTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, -1));

        viewObsBtn.setText("View Details");
        viewObsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewObsBtnActionPerformed(evt);
            }
        });
        add(viewObsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 470, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void viewObsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewObsBtnActionPerformed
        // TODO add your handling code here:
        
        
        //get the row in the table whhich was clicked
        int selectedRow = obsTable.getSelectedRow();
        
        if(selectedRow >= 0){
            
            //we can directly fetch the obs obj from zeroeth pos
            this.selectedObs = (Observation) obsTable.getValueAt(selectedRow,0);
            
            //fill all textfields
            fieldObsId.setText(String.valueOf(this.selectedObs.getObservationId()));
            fieldTemp.setText(String.valueOf(this.selectedObs.getTemperature()));
            fieldBloodPressure.setText(String.valueOf(this.selectedObs.getBloodPressure()));
            
            
           
           
        } else {
            //no selection made
            JOptionPane.showMessageDialog(null, "`no selection");
        }
    }//GEN-LAST:event_viewObsBtnActionPerformed

    private void updObsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updObsBtnActionPerformed
        // TODO add your handling code here:
       if( !fieldObsId.getText().isEmpty()){ 
        //update the observation object
        
            Observation o = this.application.getHistory().findObservation(Integer.valueOf(fieldObsId.getText()));
            o.setBloodPressure(Double.valueOf(fieldBloodPressure.getText()));
            o.setTemperature(Double.valueOf(fieldTemp.getText()));


            this.selectedObs.setBloodPressure(Double.valueOf(fieldBloodPressure.getText()));
            this.selectedObs.setTemperature(Double.valueOf(fieldTemp.getText()));
       } else {
           JOptionPane.showMessageDialog(null, "You have not made any selection");
       }
    }//GEN-LAST:event_updObsBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fieldBloodPressure;
    private javax.swing.JTextField fieldObsId;
    private javax.swing.JTextField fieldTemp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable obsTable;
    private javax.swing.JButton updObsBtn;
    private javax.swing.JButton viewObsBtn;
    // End of variables declaration//GEN-END:variables
}
